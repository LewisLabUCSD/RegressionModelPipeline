View(melt_m)
structure(melt_m)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
p <-  ggplot(data=melt_m, aes(x=model_number,y=gene)) +
geom_tile(aes(fill = coefficient)) +
#scale_fill_gradient2(name = "Coefficient",
#                     low = "green", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = "Coefficient", y = "Genes") +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * 0.1,
angle = 0, hjust = 0, colour = "black"))
p
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
View(m)
m=do.call(rbind,l)
m <- m[,-1]
m[m < (1e-9)] <- 1e-10
View(m)
m <- -1/log10(m)
View(m)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
max(m)
min(m)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
plot.new()
p
plot.new()
p <-  ggplot(data=melt_m, aes(x=model_number,y=gene)) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = "Coefficient",
low = "green", high = "red", mid = "white", midpoint = 5) +
theme_grey(base_size = base_size) +
labs(x = "Coefficient", y = "Genes") +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * 0.1,
angle = 0, hjust = 0, colour = "black"))
p
m=do.call(rbind,l)
hist(m)
View(m)
max(m)
min(m)
m <- m[,-1]
max(m)
min(m)
hist(m)
m=do.call(rbind,l)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
plot.new()
p
p <-  ggplot(data=melt_m, aes(x=model_number,y=gene)) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = "Coefficient",
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = "Models", y = "Genes") +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * 0.1,
angle = 0, hjust = 0, colour = "black"))
p
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
View(m)
m=do.call(rbind,l)
m <- m[,-1]
m <- m[,!(apply(m, 1, function(x) any(x == 0)))]
m=do.call(rbind,l)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
m <- m[,colSums(m^2) !=0]
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
View(m)
plot.new()
p
p <-  ggplot(data=melt_m, aes(x=model_number,y=gene)) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = "Coefficient",
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = "Models", y = "Genes") +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * 1,
angle = 0, hjust = 0, colour = "black"))
p
p <-  ggplot(data=melt_m, aes(x=model_number,y=gene)) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = "Coefficient",
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = "Models", y = "Genes") +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * .7,
angle = 0, hjust = 0, colour = "black"))
p
p <-  ggplot(data=melt_m, aes(x=model_number,y=reorder(gene,coefficient))) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = "Coefficient",
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = "Models", y = "Genes") +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * .7,
angle = 0, hjust = 0, colour = "black"))
p
View(m)
View(m)
m[,'100770794']
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
plot.new()
p
p <-  ggplot(data=melt_m, aes(x=model_number,y=reorder(gene,coefficient))) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = "Coefficient",
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = "Models", y = "Genes") +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * .7,
angle = 0, hjust = 0, colour = "black"),
axis.ticks.x = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.x = element_text(size = base_size * .4,
angle = 90, hjust = 0, colour = "black"))
p
p <-  ggplot(data=melt_m, aes(x=model_number,y=reorder(gene,coefficient))) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = "Coefficient",
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = "Models", y = "Genes") +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * .7,
angle = 0, hjust = 0, colour = "black"))
p
p <-  ggplot(data=melt_m, aes(x=model_number,y=reorder(gene,coefficient))) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = "Coefficient",
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = "Models", y = "Genes") +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * .7,
angle = 0, hjust = 0, colour = "black"))
p
p <-  ggplot(data=melt_m, aes(x=model_number,y=reorder(gene,coefficient))) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = "Coefficient",
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = "Models", y = "Genes") +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * .7,
angle = 0, hjust = 0, colour = "black"))
p
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
View(m)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
g=1
mm1 <- m[,groups==g]
mm1 <- m[,groups==g]
g=1
mm1 <- m[,groups==g]
mm1 <- m[,groups=g]
mm1 <- m[,which(groups==g)]
mm1 <- m[,m[,'groups']==g)]
mm1 <- m[,m[,'groups']==g]
mm1 <- m[,m[,'groups']==1]
mm1 <- m[,(m[,'groups']==1)]
mm1 <- m[,which(m[,'groups']==1)]
mm1 <- m[,which(groups==1)]
mm1 <- m[,which(groups=1)]
m[,which(groups==1)]
m[,which(m[,'groups']==1)]
which(m[,'groups']==1)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
p2
View(m2)
m2 <- matrix(data = NA, ncol = ncol(m), nrow = k)
colnames(m2) <- colnames(m)
for(g in 1:k){
m2[g,] <- colMeans(m[which(m[,'groups']==g),])
}
p2 <- getPlot(m2)
p2
m2 <- matrix(data = NA, ncol = ncol(m), nrow = k)
colnames(m2) <- colnames(m)
for(g in 1:k){
m2[g,] <- colMeans(m[which(m[,'groups']==g),])
}
p2 <- getPlot(m2)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
x
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
p2
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
p3[,'groups'] <- rownames(m3)
p3 <- getPlot(m3)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
p3
View(m3)
m[,'100764471']
p2
p3
p1
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
plot.new()
p2
p3
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
ggplot2.multiplot(plot2,plot3, cols=2)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
library(easyGgplot2)
install.packages("easyGplot2")
install.packages("easyGplot2")
install.packages("easyGgplot2")
install_github("easyGgplot2", "kassambara")
library(devtools)
install_github("easyGgplot2", "kassambara")
library(easyGgplot2)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
ggplot2.multiplot(p2,p3, cols=2)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
m_tmp = m[,groups==g]
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
z = apply(m_tmp,2,function(x) sum(abs((x-mean)/sd)) )
sd
m_tmp = m_tmp[,-c("groups")]
m_tmp = m_tmp[,-"groups"]
m_tmp = m_tmp[,-groups]
m_tmp[1,]
m_tmp = m_tmp[,-groups]
m_tmp[1,]
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
View(m_tmp)
m_tmp <- m_tmp[, !(colnames(m_tmp) %in% c("groups"))]
m_tmp <- m_tmp[, !(colnames(m_tmp) %in% c("groups"))]
View(m)
colnames(m_tmp)
mean = apply(m_tmp,2,mean) #avg for each gene coefficient
sd = apply(m_tmp,2,sd) #avg for each gene coefficient
z = apply(m_tmp,2,function(x) sum(abs((x-mean)/sd)) )
indx_tmp = which.min(z)
# change back to original index -> indx
sel_return[[g]] = l_reg[[indx]]
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
m_tmp
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
p1
View(m)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
?reorder
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
?sort
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
p1$reorderList
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
order(melt_m$coefficient)
View(melt_m)
p
View(melt_m)
View(m.dt)
View(m.dt)
reorderList <- factor(melt_m$gene, levels = order(melt_m$coefficient))
order(melt_m$coefficient)
reorderList <- factor(melt_m$gene, levels = order(melt_m$gene))
reorderList <- factor(melt_m$gene, levels = order(melt_m$gene,melt_m$coefficient))
p <- ggplot(data=melt_m, aes(x=model_number,y=reorderList)) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = legendname,
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = xlab, y = ylab) +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * .7,
angle = 0, hjust = 0, colour = "black"))
p
reorderList <- factor(melt_m$gene,
levels = melt_m$gene[order(melt_m$coefficient)])
reorderList <- factor(melt_m$gene,
levels = unique(melt_m$gene[order(melt_m$coefficient)]))
reorderList
reorderList <- factor(melt_m$coefficient,
levels = unique(melt_m$gene[order(melt_m$coefficient)]))
reorderList <- factor(melt_m$coefficient,
levels = order(melt_m$gene))
reorderList <- reorder(data=melt_m, gene,coefficient)
?reorder
reorderList <- reorder(melt_m$gene,melt_m$coefficient)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
p
reorderList
length(reorderList)
reorderList[1:3]
p <- ggplot(data=melt_m, aes(x=model_number,y=coefficient)) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = legendname,
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = xlab, y = ylab) +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * .7,
angle = 0, hjust = 0, colour = "black"))
p
p <- ggplot(data=melt_m, aes(x=model_number,y=gene)) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = legendname,
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = xlab, y = ylab) +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * .7,
angle = 0, hjust = 0, colour = "black"))
p
reorderList <- reorder(melt_m$coefficient,melt_m$gene)
melt_m$gene <- reorder(melt_m$gene,melt_m$coefficient)
melt_m$gene <- reorder(melt_m$gene,melt_m$coefficient)
p <- ggplot(data=melt_m, aes(x=model_number,y=gene)) +
geom_tile(aes(fill = coefficient)) +
scale_fill_gradient2(name = legendname,
low = "blue", high = "red", mid = "white", midpoint = 0) +
theme_grey(base_size = base_size) +
labs(x = xlab, y = ylab) +
facet_grid(  .~groups, scales = "free", space = "free" ) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.border = element_rect(colour = "black", fill=NA, size=.5),
axis.text.y = element_text(size = base_size * .7,
angle = 0, hjust = 0, colour = "black"))
p
View(melt_m)
class(melt_m$gene)
structure(melt_m$gene)
levels(melt_m$gene)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
p1.p
p1$p
m2 <- matrix(data = NA, ncol = ncol(m), nrow = k)
m3 <- matrix(data = NA, ncol = ncol(m), nrow = k)
colnames(m2) <- colnames(m)
colnames(m3) <- colnames(m)
for(g in 1:k){
idx <- which(m[,'groups']==g)
if(length(idx) > 1){
m2[g,] <- colMeans(m[idx,])
m3[g,] <- apply(m[idx,], 2, sd, na.rm=TRUE)
} else {
m2[g,] <- m[idx,]
m3[g,] <- 0
}
}
m3[,'groups'] <- c(1:k)
p2 <- getPlot(m2, xlab="Model Group", ylab="Genes",
legendname="Avg. Coeff.",reorderList=p1$reorderList)
p3 <- getPlot(m3, xlab="Model Group", ylab="Genes",
legendname="Var. Coeff.",reorderList=p1$reorderList)
ggplot2.multiplot(p2$p,p3$p, cols=2)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
# get average of coefficient for each gene in each group
m2 <- matrix(data = NA, ncol = ncol(m), nrow = k)
m3 <- matrix(data = NA, ncol = ncol(m), nrow = k)
colnames(m2) <- colnames(m)
colnames(m3) <- colnames(m)
for(g in 1:k){
idx <- which(m[,'groups']==g)
if(length(idx) > 1){
m2[g,] <- apply(m_tmp,2,mean)#colMeans(m[idx,])
m3[g,] <- apply(m[idx,], 2, sd)
} else {
m2[g,] <- m[idx,]
m3[g,] <- 0
}
}
m3[,'groups'] <- c(1:k)
p2 <- getPlot(m2, xlab="Model Group", ylab="Genes",
legendname="Avg. Coeff.",reorderList=p1$reorderList)
p3 <- getPlot(m3, xlab="Model Group", ylab="Genes",
legendname="Var. Coeff.",reorderList=p1$reorderList)
ggplot2.multiplot(p2$p,p3$p, cols=2)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
View(m)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
p1$p
?ggplot2.multiplot
source('~/GitHub/RegressionModelPipeline/R/vis.r')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
p1$p
p23
p23
source('~/GitHub/RegressionModelPipeline/R/test_vis.R')
visResults$p1$p
source('~/GitHub/RegressionModelPipeline/R/test_vis.R')
source('~/GitHub/RegressionModelPipeline/R/test_vis.R')
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
visResults$p1$p
visResults$p1$p
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
visResults$p1
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
visResults$p1
ggplot2.multiplot(visResults$p2,visResults$p3, cols=2)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
visResults$p1
ggplot2.multiplot(visResults$p2,visResults$p3, cols=2)
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
visResults$p1
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
visResults$p1
ggplot2.multiplot(visResults$p2,visResults$p3, cols=2)
?cutree
debugSource('~/GitHub/RegressionModelPipeline/R/test_vis.R')
visResults$p1
ggplot2.multiplot(visResults$p2,visResults$p3, cols=2)
library(jackstraw)
install.packages("jackstraw")
source("https://bioconductor.org/biocLite.R")
biocLite("lfa")
install.packages("jackstraw")
library(jackstraw)
set.seed(1234)
B = c(rep(1,50),rep(-1,50), rep(0,900))
L = rnorm(20)
E = matrix(rnorm(1000*20), nrow=1000)
dat = B %*% t(L) + E
dat = t(scale(t(dat), center=TRUE, scale=TRUE))
out = jackstraw(dat, r=1, method="PCA")
out = jackstraw(dat, r=1, s=10, B=1000, seed=5678)
?jackstraw
library(ggplot2)
p <- ggplot(data=dat)
View(dat)
View(dat)
q()
